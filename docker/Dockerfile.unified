FROM nvidia/cuda:11.8.0-devel-ubuntu22.04 as buildcolmap


ARG DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC

## Installation of the neuralangelo and colmap dependencies: 
# colmap dependencies
RUN apt-get update && apt-get install -y \
    git \
    tzdata \
    cmake \
    ninja-build \
    build-essential \
    libboost-program-options-dev \
    libboost-filesystem-dev \
    libboost-graph-dev \
    libboost-system-dev \
    libboost-test-dev \
    libeigen3-dev \
    libflann-dev \
    libfreeimage-dev \
    libmetis-dev \
    libgoogle-glog-dev \
    libgflags-dev \
    libsqlite3-dev \
    libglew-dev \
    qtbase5-dev \
    libqt5opengl5-dev \
    libcgal-dev \
    libceres-dev \
    build-essential \
    bzip2 \
    ca-certificates \
    cmake \
    curl \
    ffmpeg \
    g++ \
    git \
    libx264-dev \
    tmux \
    wget \
    python3-pip \
    python3 \
    xvfb

RUN pip install --upgrade pip 

WORKDIR /app/
ENV CUDA_ARCHITECTURES=70,72,75,80,86

## setting up neuralangelo/colmap and overall repository:

RUN git clone --recursive https://github.com/The-Extra-Project/neuralangelo.git && \
cd ./neuralangelo && \
git checkout -b Dhruv/resolve-docker-build && \
cd ./third_party/colmap && \
mkdir build && \
cd build && \
cmake ../ -GNinja -DCMAKE_CUDA_ARCHITECTURES=86 && \
ninja && \
ninja install 


FROM nvidia/cuda:12.2.2-devel-ubuntu22.04 as build_cuda
## installing the tiny-cuda-nn which is not being setup by the conda env. 
COPY --from=buildcolmap /app/ /app/ 


ARG TCNN_CUDA_ARCHITECTURES=90;89;86;80;75;70;61;52
RUN apt-get update && apt-get install -y git python3-pip 

WORKDIR /

## reference from internet, installation of tiny-cuda-nn

RUN apt-get update && apt-get install -y  cmake build-essential

RUN git clone https://github.com/NVlabs/tiny-cuda-nn.git --recursive

# Build and install tiny-cuda-nn
WORKDIR /tiny-cuda-nn/
RUN cmake -DTCNN_BUILD_BENCHMARK=OFF -DTCNN_BUILD_EXAMPLES=OFF -B build
RUN cmake --build build --config RelWithDebInfo -j $(nproc) --verbose
RUN cmake --install build

# Set environment variable for tiny-cuda-nn
ENV TINYCUDANN_DIR /usr/local/tiny-cuda-nn
RUN echo "export TINYCUDANN_DIR=/usr/local/tiny-cuda-nn" >> /etc/profile

WORKDIR /app/neuralangelo/

RUN pip install torch 
RUN pip install  -r requirements.txt


FROM build_cuda as run

COPY --from=build_cuda /app/neuralangelo /app/neuralangelo

WORKDIR  /app/neuralangelo

ARG SEQUENCE_NAME="Barn"
ARG PATH_TO_VIDEO="./datasets/videos/Barn.mp4"

RUN chmod +x run.sh
ENTRYPOINT ["./run.sh", "Barn"] 