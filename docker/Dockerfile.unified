FROM nvidia/cuda:11.8.0-devel-ubuntu22.04 as buildcolmap

ARG DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC
## Installation of the neuralangelo and colmap dependencies: 
# colmap dependencies
WORKDIR /
RUN apt-get update && apt-get install -y \
    git \
    tzdata \
    cmake \
    ninja-build \
    build-essential \
    libboost-program-options-dev \
    libboost-filesystem-dev \
    libboost-graph-dev \
    libboost-system-dev \
    libboost-test-dev \
    libeigen3-dev \
    libflann-dev \
    libfreeimage-dev \
    libmetis-dev \
    libgoogle-glog-dev \
    libgflags-dev \
    libsqlite3-dev \
    libglew-dev \
    qtbase5-dev \
    libqt5opengl5-dev \
    libcgal-dev \
    libceres-dev \
    build-essential \
    bzip2 \
    ca-certificates \
    cmake \
    curl \
    ffmpeg \
    g++ \
    git \
    libx264-dev \
    tmux \
    wget \
    python3-pip \
    python3 \
    xvfb \
    cmake \
    build-essential

RUN pip install --upgrade pip 

WORKDIR /app/

## setting up neuralangelo/colmap and overall repository:

RUN git clone --recursive https://github.com/The-Extra-Project/neuralangelo.git && \
cd ./neuralangelo && \
git checkout -b Dhruv/resolve-docker-build && \
cd ./third_party/colmap && \
mkdir build && \
cd build && \
cmake ../ -GNinja -DCMAKE_CUDA_ARCHITECTURES=86 && \
ninja && \
ninja install 



FROM buildcolmap as run_cuda


COPY --from=buildcolmap /usr /usr

COPY --from=buildcolmap /app/ /app/

WORKDIR /app/neuralangelo/


ENV TCNN_CUDA_ARCHITECTURES=
ENV FORCE_CUDA=1
ENV TCNN_CUDA_ARCHITECTURES=70,72,75,80,86

ENV CUDA_HOME=/usr/local/cuda
RUN pip install torch --index-url https://download.pytorch.org/whl/cu118 && pip install  -r requirements.txt

RUN pip install pynvml
FROM run_cuda as run

COPY --from=run_cuda /app/ /app/
COPY --from=run_cuda /usr/ /usr/



WORKDIR  /app/neuralangelo

RUN chmod +x run.sh
RUN ./run.shENTRYPOINT ["./run.sh"] 